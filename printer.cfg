[include mainsail.cfg]
[include timelapse.cfg]

[save_variables]
filename: ~/printer_data/config/variables.cfg

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
[stepper_x]
step_pin: PC0
dir_pin: !PG2
enable_pin: !PC2
microsteps: 16
rotation_distance: 39.85
endstop_pin: ^!PA2
position_endstop: 0
position_max: 220
homing_speed: 40
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
[stepper_y]
step_pin: PC6
dir_pin: !PC4
enable_pin: !PA7
microsteps: 16
rotation_distance: 39.85
endstop_pin: ^!PA6
position_endstop: 0
position_max: 220
homing_speed: 40
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
[stepper_z]
step_pin: PA3
dir_pin: PA1
enable_pin: !PA5
microsteps: 16
rotation_distance: 8
endstop_pin: ^!PC7
position_max: 230
position_min: -10
homing_speed: 20
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
[extruder]
step_pin: PL3
dir_pin: PL5
enable_pin: !PB6
microsteps: 16
rotation_distance: 7.943242	            # Needs to be optimized: https://www.klipper3d.org/Rotation_Distance.html#calibrating-rotation_distance-on-extruders
nozzle_diameter: 0.4
filament_diameter: 1.750
heater_pin: PB4
sensor_type: EPCOS 100K B57560G104F		# unknown for default Geeetech A10 extruder, based on fan made Marlin version
sensor_pin: PK3
min_temp: 0
max_temp: 250
min_extrude_temp: 160
max_extrude_only_distance: 150.0
control: pid		# Run pid tuning! https://www.klipper3d.org/Config_checks.html#calibrate-pid-settings
pid_Kp: 45.80
pid_Ki: 3.61
pid_Kd: 145.39
pressure_advance: 0.05
pressure_advance_smooth_time: 0.040

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
[extruder_stepper extruder1]
extruder: 
step_pin: PL0
dir_pin: PL2
enable_pin: !PL1
full_steps_per_rotation: 200
microsteps: 16
rotation_distance: 7.943242	# Needs to be optimized: https://www.klipper3d.org/Rotation_Distance.html#calibrating-rotation_distance-on-extruders

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
[extruder_stepper extruder2]
extruder: 
step_pin: PL6
dir_pin: PL4
enable_pin: !PG0
full_steps_per_rotation: 200
microsteps: 16
rotation_distance: 7.943242 	# Needs to be optimized: https://www.klipper3d.org/Rotation_Distance.html#calibrating-rotation_distance-on-extruders
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#

[gcode_macro T0]
gcode:
    RESPOND TYPE=command MSG='T0'
    {% set svv = printer.save_variables.variables %} 
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=extruder DISTANCE={svv.speed_e0_t0}
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=extruder1 DISTANCE={svv.speed_e1_t0} 
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=extruder2 DISTANCE={svv.speed_e2_t0} 
    
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder MOTION_QUEUE=extruder # Add e0
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder # Add e1
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder2 MOTION_QUEUE=extruder # Add e1
	
[gcode_macro T1]
gcode:
    RESPOND TYPE=command MSG='T1'
    {% set svv = printer.save_variables.variables %}
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=extruder DISTANCE={svv.speed_e0_t1} 
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=extruder1 DISTANCE={svv.speed_e1_t1} 
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=extruder2 DISTANCE={svv.speed_e2_t1} 

    SYNC_EXTRUDER_MOTION EXTRUDER=extruder MOTION_QUEUE=extruder # Add e0
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder # Add e1
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder2 MOTION_QUEUE=extruder # Add e1

[gcode_macro T2]
gcode:
    {% set svv = printer.save_variables.variables %}
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=extruder DISTANCE={svv.speed_e0_t2}  
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=extruder1 DISTANCE={svv.speed_e1_t2} 
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=extruder2 DISTANCE={svv.speed_e2_t2}   

    SYNC_EXTRUDER_MOTION EXTRUDER=extruder MOTION_QUEUE=extruder # Add e0
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder # Add e1
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder2 MOTION_QUEUE=extruder # Add e1

[gcode_macro T3]
gcode:

    {% set svv = printer.save_variables.variables %}
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=extruder DISTANCE={svv.speed_e0_t3} 
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=extruder1 DISTANCE={svv.speed_e1_t3} 
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=extruder2 DISTANCE={svv.speed_e2_t3} 

    SYNC_EXTRUDER_MOTION EXTRUDER=extruder MOTION_QUEUE=extruder # Add e0
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder # Add e1
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder2 MOTION_QUEUE=extruder # Add e1

[gcode_macro T4]
gcode:
    {% set svv = printer.save_variables.variables %}
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=extruder DISTANCE={svv.speed_e0_t4}  
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=extruder1 DISTANCE={svv.speed_e1_t4} 
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=extruder2 DISTANCE={svv.speed_e2_t4}  

    SYNC_EXTRUDER_MOTION EXTRUDER=extruder MOTION_QUEUE=extruder # Add e0
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder # Add e1
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder2 MOTION_QUEUE=extruder # Add e1

[gcode_macro T5]
gcode:
    {% set svv = printer.save_variables.variables %}
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=extruder DISTANCE={svv.speed_e0_t5}  
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=extruder1 DISTANCE={svv.speed_e1_t5} 
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=extruder2 DISTANCE={svv.speed_e2_t5} 

    SYNC_EXTRUDER_MOTION EXTRUDER=extruder MOTION_QUEUE=extruder # Add e0
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder # Add e1
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder2 MOTION_QUEUE=extruder # Add e1

[gcode_macro T6]
gcode:
    {% set svv = printer.save_variables.variables %}
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=extruder DISTANCE={svv.speed_e0_t6} 
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=extruder1 DISTANCE={svv.speed_e1_t6} 
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=extruder2 DISTANCE={svv.speed_e2_t6}   

    SYNC_EXTRUDER_MOTION EXTRUDER=extruder MOTION_QUEUE=extruder # Add e0
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder # Add e1
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder2 MOTION_QUEUE=extruder # Add e1

[gcode_macro T7]
gcode:
    {% set svv = printer.save_variables.variables %}
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=extruder DISTANCE={svv.speed_e0_t7} 
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=extruder1 DISTANCE={svv.speed_e1_t7} 
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=extruder2 DISTANCE={svv.speed_e2_t7} 

    SYNC_EXTRUDER_MOTION EXTRUDER=extruder MOTION_QUEUE=extruder # Add e0
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder # Add e1
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder2 MOTION_QUEUE=extruder # Add e1

[gcode_macro M163]
variable_extruder_0: 0
variable_extruder_1: 0
variable_extruder_2: 0 

gcode:
    {% set rot_dist0 = params.ROT_DIST_0|default(7.943242)|float %} # define in default the rotation distance of the extruder0
    {% set rot_dist1 = params.ROT_DIST_1|default(7.943242)|float %} # define in default the rotation distance of the extruder1
    {% set rot_dist2 = params.ROT_DIST_2|default(7.943242)|float %} # define in default the rotation distance of the extruder2
      
    {% set EXTRUDER0 = params.EXTRUDER0 | default(rot_dist0) | float %}
    {% set EXTRUDER1 = params.EXTRUDER1 | default(rot_dist1) | float %}
    {% set EXTRUDER2 = params.EXTRUDER2 | default(rot_dist2) | float %}

#[P<factor>] [S<index>] Set a single mix factor (in proportion to the sum total of all mix factors). The mix must be committed to a virtual tool by M164 before it takes effect.
 {% if 'S' in params %}
   {% if params.S|int == 0 %}
      {% if 'P' in params %}
        {% set EXTRUDER0 = ((rot_dist0 * 100.0)/(100 * params.P|float)) %}
        RESPOND MSG={EXTRUDER0}
        SET_GCODE_VARIABLE MACRO=M163 VARIABLE=extruder_0 VALUE={EXTRUDER0}
      {% endif %}
    {% endif %}

   {% if params.S|int == 1 %} 
      {% if 'P' in params %}
        {% set EXTRUDER1 = ((rot_dist1 * 100.0)/(100 * params.P|float)) %}        
        RESPOND MSG={EXTRUDER1} 
        SET_GCODE_VARIABLE MACRO=M163 VARIABLE=extruder_1 VALUE={EXTRUDER1}
      {% endif %}
   {% endif %}

   {% if params.S|int == 2 %} 
      {% if 'P' in params %}
        {% set EXTRUDER2 = ((rot_dist2 * 100.0)/(100 * params.P|float)) %}  
        RESPOND MSG={EXTRUDER2}
        SET_GCODE_VARIABLE MACRO=M163 VARIABLE=extruder_2 VALUE={EXTRUDER2}
      {% endif %} 
   {% endif %}

  {% endif %}

[gcode_macro M164]    
 gcode:
      {% if 'S' in params %}
       {% if params.S|int == 0 %}
    
          RESPOND TYPE=command MSG='M164 Tool T0'
          SAVE_VARIABLE VARIABLE=speed_e0_t0 VALUE={printer["gcode_macro M163"].extruder_0}
          SAVE_VARIABLE VARIABLE=speed_e1_t0 VALUE={printer["gcode_macro M163"].extruder_1}
          SAVE_VARIABLE VARIABLE=speed_e2_t0 VALUE={printer["gcode_macro M163"].extruder_2}
          
       {% endif %}
       {% if params.S|int == 1 %}
          RESPOND TYPE=command MSG='M164 Tool T1'
          SAVE_VARIABLE VARIABLE=speed_e0_t1 VALUE={printer["gcode_macro M163"].extruder_0}
          SAVE_VARIABLE VARIABLE=speed_e1_t1 VALUE={printer["gcode_macro M163"].extruder_1}
          SAVE_VARIABLE VARIABLE=speed_e2_t1 VALUE={printer["gcode_macro M163"].extruder_2}
       {% endif %}
       {% if params.S|int == 2 %}
          RESPOND TYPE=command MSG='M164 Tool T2'
          SAVE_VARIABLE VARIABLE=speed_e0_t2 VALUE={printer["gcode_macro M163"].extruder_0}
          SAVE_VARIABLE VARIABLE=speed_e1_t2 VALUE={printer["gcode_macro M163"].extruder_1}
          SAVE_VARIABLE VARIABLE=speed_e2_t2 VALUE={printer["gcode_macro M163"].extruder_2}
       {% endif %}
       {% if params.S|int == 3 %}
          RESPOND TYPE=command MSG='M164 Tool T3'
          SAVE_VARIABLE VARIABLE=speed_e0_t3 VALUE={printer["gcode_macro M163"].extruder_0}
          SAVE_VARIABLE VARIABLE=speed_e1_t3 VALUE={printer["gcode_macro M163"].extruder_1}
          SAVE_VARIABLE VARIABLE=speed_e2_t3 VALUE={printer["gcode_macro M163"].extruder_2}
       {% endif %}
       {% if params.S|int == 4 %}
          RESPOND TYPE=command MSG='M164 Tool T4'
          SAVE_VARIABLE VARIABLE=speed_e0_t4 VALUE={printer["gcode_macro M163"].extruder_0}
          SAVE_VARIABLE VARIABLE=speed_e1_t4 VALUE={printer["gcode_macro M163"].extruder_1}
          SAVE_VARIABLE VARIABLE=speed_e2_t4 VALUE={printer["gcode_macro M163"].extruder_2}
       {% endif %}
       {% if params.S|int == 5 %}
          RESPOND TYPE=command MSG='M164 Tool T5'
          SAVE_VARIABLE VARIABLE=speed_e0_t5 VALUE={printer["gcode_macro M163"].extruder_0}
          SAVE_VARIABLE VARIABLE=speed_e1_t5 VALUE={printer["gcode_macro M163"].extruder_1}
          SAVE_VARIABLE VARIABLE=speed_e2_t5 VALUE={printer["gcode_macro M163"].extruder_2}
       {% endif %}
       {% if params.S|int == 6 %}
          RESPOND TYPE=command MSG='M164 Tool T6'
          SAVE_VARIABLE VARIABLE=speed_e0_t6 VALUE={printer["gcode_macro M163"].extruder_0}
          SAVE_VARIABLE VARIABLE=speed_e1_t6 VALUE={printer["gcode_macro M163"].extruder_1}
          SAVE_VARIABLE VARIABLE=speed_e2_t6 VALUE={printer["gcode_macro M163"].extruder_2}
       {% endif %}
       {% if params.S|int == 7 %}
          RESPOND TYPE=command MSG='M164 Tool T7'
          SAVE_VARIABLE VARIABLE=speed_e0_t7 VALUE={printer["gcode_macro M163"].extruder_0}
          SAVE_VARIABLE VARIABLE=speed_e1_t7 VALUE={printer["gcode_macro M163"].extruder_1}
          SAVE_VARIABLE VARIABLE=speed_e2_t7 VALUE={printer["gcode_macro M163"].extruder_2}
       {% endif %}
       {% if params.S|int == 8 %}
          RESPOND TYPE=command MSG='M164 Tool T8'          
          SAVE_VARIABLE VARIABLE=speed_e0_t8 VALUE={printer["gcode_macro M163"].extruder_0}
          SAVE_VARIABLE VARIABLE=speed_e1_t8 VALUE={printer["gcode_macro M163"].extruder_1}
          SAVE_VARIABLE VARIABLE=speed_e2_t8 VALUE={printer["gcode_macro M163"].extruder_2}
       {% endif %}

     {% endif %}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#

[heater_bed]
heater_pin: PG5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK2
min_temp:  0
max_temp: 120
control: pid	# Run pid tuning! https://www.klipper3d.org/Config_checks.html#calibrate-pid-settings
pid_Kp: 182.46
pid_Ki: 35.92
pid_Kd: 231.70
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
[fan]
pin: PH6
hardware_pwm: True
cycle_time: 0.005

#[heater_fan coldend_fan]
#pin: PH5
#cycle_time: 0.150
#kick_start_time: 0.300

#[temperature_fan chamber]
#pin: PH4
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#cycle_time:0.01
#off_below:0.1
#sensor_type: Generic 3950
#sensor_pin: PF1
#min_temp: 0
#max_temp: 70
#target_temp: 35.0
#control: watermark
#gcode_id: C

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#

#Original Geeetech A10 Display
#[display]
#lcd_type: hd44780
#rs_pin: PD1
#e_pin: PH0
#d4_pin: PH1
#d5_pin: PD0
#d6_pin: PE3
#d7_pin: PC1
#encoder_pins: ^PL7, ^PG1
#click_pin: ^!PD2

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0 
#serial: /dev/ttyAMA0
baud: 250000
restart_method: arduino
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
[printer]
kinematics: cartesian
max_velocity: 400
max_accel: 5000
max_z_velocity: 100
max_z_accel: 50
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
[filament_switch_sensor my_sensor]
pause_on_runout: True
switch_pin: ^!PK4
runout_gcode:
    PAUSE_MACRO
insert_gcode:
    RESUME_MACRO
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
    
[verify_heater extruder]
max_error: 100
check_gain_time: 30
hysteresis: 5
heating_gain: 2
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#

#screw_thread: CW-M4
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
[firmware_retraction]
retract_length: 5
retract_speed: 50
#unretract_extra_length: 1
unretract_speed: 50

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
[pause_resume]
#recover_velocity: 50.0
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 1
max_temp: 100
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
[adc_temperature VOLT]
temperature1: 10
voltage1: 1.0
temperature2: 50
voltage2: 5.0
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Start bed heating
    M140 S{BED_TEMP}
    # Use absolute coordinates
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0.0
    # Home the printer
    G28
    # Move the nozzle near the bed
    G1 Z5 F3000
    # Move the nozzle very close to the bed
    G1 Z0.15 F300
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X200 Y200 E-6 F5000
    # Raise nozzle by 10mm
    G1 Z10 F500
    G90
    # Disable steppers
    M84
 #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#   
[gcode_macro LOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    M300 # beep
    G91
    G92 E0
    G1 E350 F{max_velocity}
    G1 E25 F{speed} #purge
    M300
    M300

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~# 
[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    G91
    M300 # beep
    G92 E0
    G1 E25 F{speed} # purge
    G1 E-420 F{max_velocity}
    M300
    M300
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~# 
[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#  
[gcode_macro M205]
gcode:
  {% if 'X' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.X}
  {% elif 'Y' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.Y}
  {% endif %}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#  
# Cancel object (aka Marlin/RRF M486 commands) support
#
# Enable object exclusion
[exclude_object]

[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#  
#[gcode_button my_gcode_button]
#pin:
#   The pin on which the button is connected. This parameter must be
#   provided.
#analog_range:
#   Two comma separated resistances (in Ohms) specifying the minimum
#   and maximum resistance range for the button. If analog_range is
#   provided then the pin must be an analog capable pin. The default
#   is to use digital gpio for the button.
#analog_pullup_resistor:
#   The pullup resistance (in Ohms) when analog_range is specified.
#   The default is 4700 ohms.
#press_gcode:
#   A list of G-Code commands to execute when the button is pressed.
#   G-Code templates are supported. This parameter must be provided.
#release_gcode:
#   A list of G-Code commands to execute when the button is released.
#   G-Code templates are supported. The default is to not run any
#   commands on a button release.
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 69.874
#*# pid_ki = 1.508
#*# pid_kd = 809.661
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 24.092
#*# pid_ki = 0.968
#*# pid_kd = 149.970
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  1.512917, 1.743333, 1.857500, 1.857917, 1.721667, 1.480833
#*# 	  1.527083, 1.783333, 1.896667, 1.892083, 1.782500, 1.576250
#*# 	  1.540417, 1.804583, 1.909167, 1.943333, 1.820000, 1.595833
#*# 	  1.543750, 1.784583, 1.917500, 1.940833, 1.843750, 1.613750
#*# 	  1.544583, 1.799167, 1.905833, 1.936250, 1.842083, 1.606667
#*# 	  1.503333, 1.780833, 1.875417, 1.890833, 1.784583, 1.533333
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 2.0
#*# max_x = 208.0
#*# min_y = 25.0
#*# max_y = 220.0
#*#
#*# [stepper_z]
#*# position_endstop = -0.300